
#font = pygame.fonte.SysFont("arial", 40, True, False) #parametros = tipo de fonte, tamanho, negrito, italico
mensagem = f"Pontos: {pontos}"
texto_formatado = font.render(mensagem, True, (255,255,255)) #true ou false para pixelada

root = tk.Tk()
label.config(font=("Arial", 20))
label.pack()
    root.mainloop()
    label = tk.Label(root, text = "Pontos: ")
tela.blit(texto_formatado, (450,40)) #texto que eu quero, posicao

exemplo de classe:
class cachorro:
	def __init__(self, cor_de_pelo, idade, tamanho):
		self.cor_de_pelo = cor_de_pelo
		self.idade = idade
		self.tamanho = tamanho
	
	def latir(self):
		print("au au")

	def correr(self):
		print(f'{self.nome} está correndo')

biblioteca de botões

import tkinter as tk #biblioteca de interface gráfica; cria janelas, botões, caixas de texo, listas

#carregando os botões de imagem
resume_img = pygame.image.load("images/butoon_resume.png").convert_alpha()

#instanciando os botões
resume_button = button.Button(304, 125, resume_img, 1)

 if game_start == True:
        if resume_button.draw(screen):
            game_pause = False
    else:
        draw_text("Precione 1 para iniciar", font, TEXT_COL, 160, 250)

#criando a janela principal
root = tk.Tk()

#criando os botoes para o nivel
button_nivel1 = tk.Button(root, text="Fácil", command=lambda: selecionar_nivel(1))
button_nivel2 = tk.Button(root, text="Médio", command=lambda: selecionar_nivel(2))
button_nivel3 = tk.Button(root, text="Difícil", command=lambda: selecionar_nivel(3))

#adicionando os botoes na janela
button_nivel1.pack()
button_nivel2.pack()
button_nivel3.pack()

#classe para as cartas
class Carta:
     def __init__(self, imagem, aranha):
          self.imagem = imagem
          self.revelada = False
          self.aranha = aranha

     def criar_nivel(n_cartas, n_aranhas):
          imagens = [imagem1, imagem2, imagem3, imagem4, imagem5, imagem6]
          cartas = []
          for i in range(n_cartas):
               if i < n_cartas:
                    aranha = True
               else:
                    aranha = False
               imagem = random.sample(imagens, 1)[0]
               cartas.append(Carta(imagem, aranha))
               cartas.append(Carta(imagem, aranha))
          random.shuffle(cartas)
          return cartas
     
     def jogas_nivel(cartas, max_jogdadas):
          jogadas = 0
          pontuacao = 0
          while jogadas < max_jogadas and pontuacao < len(cartas)/2:
               jogas += 1
          return pontuacao

def selecionar_nivel(nivel): #inicia o nivel que o usuario deseja
     if nivel == 1:
          max_movimentos = 20
          #image_list = lista encadeada 1
          #iniciar_jogo(max_movimentos, image_list)
     elif nivel == 2:
          max_movimentos = 18
          #image_list = lista encadeada 2
          #iniciar_jogo(max_movimentos, image_list)
     elif nivel == 3:
          max_movimentos = 16
          #image_list = lista encadeada 3
          #iniciar_jogo(max_movimentos, image_list)
     else:
          print("Nível inválido")


#carregando uma imagem de fundo da tela
fundo_imagem = pygame.image.load("imagens_jogo\magenta.png")

#trazendo pro fundo da tela
fundo_imagem = pygame.transform.scale(fundo_imagem, (800, 600))